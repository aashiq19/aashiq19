/*
RESULT:  Runtime error - SIGSEGVRefer judge environment
View more
Segmentation fault: This error has occurred because your program is trying to read or write outside the allocated memory or your program is trying to write a read-only memory. For example, this error is thrown when you are accessing a[-1] in a programming language that does not support negative indices for an array.
The SIGSEGV error can also occur when an out-of-scope array index causes a buffer overflow or an incorrectly-initialized pointer.
*/
// problem below, this code works perfectly but fails to maintain memory
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin>>n;
        int a[n][n];
        for(int i=0;i<n;i++){
            a[i][0]=1;
            a[i][i+1]=1;
            for (int j=1;j<=i;j++){
                a[i][j]=a[i-1][j-1]+a[i-1][j];
            }
        }
        cout<<a[0][0]<<endl;
        for(int i=0;i<n-1;++i){
            for (int j=0;j<=i+1;j++){
                cout<<a[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    return 0;
}



// code that was accepted is given below,
#include <bits/stdc++.h>
using namespace std;
const int N =42;
int main()
{
    long long int a[N][N];
    a[0][0]=1;
    for(int i=1;i<N;++i){
        a[i][0] = 1;
        a[i][i] = 1;
        for(int j=1; j<i; ++j){
            a[i][j]=a[i-1][j-1]+a[i-1][j];
        }
    }
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin>>n;
        for(int i=0; i<n; ++i){
            for (int j=0; j<=i;++j){
                cout<<a[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    return 0;
}
